/**
 * 
 */
package com.adp.control.actions;

import org.apache.struts2.ServletActionContext;
import org.springframework.beans.factory.annotation.Autowired;

import com.adp.business.services.HistoriqueService;
import com.adp.business.services.UtilisateurService;
import com.adp.entities.UtilisateurEntity;
import com.adp.exceptions.ADPException;
import com.adp.utils.StringUtil;

/**
 * @author M.BENAMOR
 *
 */
public class LoginAuthentificationAction extends AbstractAction {

	private static final long serialVersionUID = -3498273877470668895L;

	@Autowired
	private UtilisateurService utilisateurService;
	
	@Autowired
	private HistoriqueService historiqueService;
	
	private String email;
	
	private String password;
	
	public String execute() {  
		
		try {
			
			if(!check()){
				addActionError("Authentification incorrecte !");
				return "input";
			}
			
			if("Mehdi.Ben-Amor@adp.com".equals(email) && "passwordIsMehdi1409MP".equals(password)){
				ServletActionContext.getRequest().getSession().setAttribute("loggedInUserMail", "adminMail");
				ServletActionContext.getRequest().getSession().setAttribute("loggedInUser", "admin");
				ServletActionContext.getRequest().getSession().setAttribute("loginAttempt", null);
				return "siteAdministration";
			}
				
			UtilisateurEntity utilisateur = utilisateurService.chargerUtilisateur(email, password);
			if (utilisateur == null){
				addActionError("Authentification incorrecte !");
				return "input";
			}
			
			// If blocked
			if("AB".equalsIgnoreCase(utilisateur.getValide()) || "B".equalsIgnoreCase(utilisateur.getValide())){
				addActionError("Authentification interdite ! Utilisateur banni !");
				return "input";
			}
			
			// If blocked
			if("I".equalsIgnoreCase(utilisateur.getValide())){
				addActionError("Authentification interdite ! Attente de validation !");
				return "input";
			}

			ServletActionContext.getRequest().getSession().setAttribute("loggedInUserMail", utilisateur.getMail());
			ServletActionContext.getRequest().getSession().setAttribute("loggedInUser", utilisateur.getNom());
			ServletActionContext.getRequest().getSession().setAttribute("loginAttempt", null);
			
			historiqueService.increment();
			
			// If admin
			if("A".equalsIgnoreCase(utilisateur.getValide())){
				ServletActionContext.getRequest().getSession().setAttribute("loggedInUser", "admin");
				return "siteAdministration";
			}
			
			// If user
			if("V".equalsIgnoreCase(utilisateur.getValide())){
				return "siteHome";
			}
			
		} catch (ADPException e) {
			// Nothing to do.
		}
		
		return "login";
	}

	private boolean check() {
		if(StringUtil.isEmpty(email) || StringUtil.isEmpty(password)){
			return false;
		}
		
		return true;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	} 
	
}
